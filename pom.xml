<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.nilhcem</groupId>
	<artifactId>secondbrain</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>secondbrain</name>
	<url>http://localhost/</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
		<org.slf4j.version>1.6.1</org.slf4j.version>
	</properties>

	<dependencies>
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<!-- JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- PostgreSQL -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.0-801.jdbc4</version>
		</dependency>

		<!-- Spring / Spring MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
			<!-- Exclude Commons Logging in favor of SLF4J -->
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Hibernate framework -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.6.5.Final</version>
		</dependency>

		<!-- Javassist, bytecode provider used by Hibernate -->
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.14.0-GA</version>
		</dependency>

		<!-- cglib -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>
		<dependency> <!-- Spring is using JCL -->
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.29</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Encoders and Decoders for various formats (Hex...) -->
		<dependency>
		  <groupId>commons-codec</groupId>
		  <artifactId>commons-codec</artifactId>
		  <version>1.5</version>
		</dependency>

		<!-- Jax-RS provider for JSON content type, used for Ajax in Spring MVC -->
		<dependency>
		  <groupId>org.codehaus.jackson</groupId>
		  <artifactId>jackson-jaxrs</artifactId>
		  <version>1.8.2</version>
		  <type>jar</type>
		  <scope>compile</scope>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<repositories>
		<!-- Jboss repository for Hibernate -->
		<repository>
			<id>JBoss</id>
			<name>JBoss Repository</name>
			<layout>default</layout>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
		</repository>
	</repositories>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<!-- Use JDK 1.6 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- Explicitly tell maven-eclipse-plugin that it should generate a WTP-project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<inherited>true</inherited>
				<configuration>
					<wtpmanifest>true</wtpmanifest>
					<wtpapplicationxml>true</wtpapplicationxml>
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>

			<!-- deploy to Tomcat (see maven config file for setting server authentications -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<url>http://localhost:8080/manager/text</url>
					<server>tomcat7</server>
					<path>/secondbrain</path>
				</configuration>
			</plugin>

			<!-- Liquibase: Database change management -->
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>2.0.1</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<configuration>
							<propertyFile>src/main/resources/META-INF/database.properties</propertyFile>
							<changeLogFile>src/main/config/liquibase/db.changelog-master.xml</changeLogFile>
						</configuration>
						<goals>
							<goal>update</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Compress JS and CSS -->
			<plugin>
			  <groupId>net.alchim31.maven</groupId>
			  <artifactId>yuicompressor-maven-plugin</artifactId>
			  <version>1.2</version>

			  <executions>
			    <execution>
			      <goals>
				<goal>compress</goal>
			      </goals>
			    </execution>
			  </executions>
			  <configuration>
			    <webappDirectory>
			      ${project.build.directory}/minimized
			    </webappDirectory>
			    <nosuffix>true</nosuffix>
			    <excludes>
			      <exclude>**/jquery*.min.js</exclude> <!-- already compressed -->
			      <exclude>**/link-icons/screen.css</exclude> <!-- yui compressor breaks on this file -->
			    </excludes>
			  </configuration>
			</plugin>

			<!-- Use compressed files from target/minimized to create the war file -->
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-war-plugin</artifactId>
			  <version>2.1.1</version>
			  <configuration>
			    <webResources>
			      <resource>
				<directory>
				  ${project.build.directory}/minimized
				</directory>
				<targetPath>/</targetPath>
				<filtering>false</filtering>
			      </resource>
			    </webResources>
			  </configuration>
			</plugin>
		</plugins>
	</build>
</project>
